/*
 * This file is generated by jOOQ.
 */
package io.github.jklingsporn.qjre.schema.tables.records;


import io.github.jklingsporn.qjre.schema.enums.FilmRating;
import io.github.jklingsporn.qjre.schema.tables.Film;
import io.github.jklingsporn.qjre.schema.tables.interfaces.IFilm;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmRecord extends UpdatableRecordImpl<FilmRecord> implements VertxPojo, Record13<Short, String, String, Short, Boolean, Boolean, Boolean, BigDecimal, Short, BigDecimal, FilmRating, String, LocalDateTime>, IFilm {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sakila.film.film_id</code>.
     */
    @Override
    public FilmRecord setFilmId(Short value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.film_id</code>.
     */
    @Override
    public Short getFilmId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>sakila.film.title</code>.
     */
    @Override
    public FilmRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.title</code>.
     */
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sakila.film.description</code>.
     */
    @Override
    public FilmRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sakila.film.release_year</code>.
     */
    @Override
    public FilmRecord setReleaseYear(Short value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.release_year</code>.
     */
    @Override
    public Short getReleaseYear() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>sakila.film.language_id</code>.
     */
    @Override
    public FilmRecord setLanguageId(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.language_id</code>.
     */
    @Override
    public Boolean getLanguageId() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>sakila.film.original_language_id</code>.
     */
    @Override
    public FilmRecord setOriginalLanguageId(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.original_language_id</code>.
     */
    @Override
    public Boolean getOriginalLanguageId() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>sakila.film.rental_duration</code>.
     */
    @Override
    public FilmRecord setRentalDuration(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.rental_duration</code>.
     */
    @Override
    public Boolean getRentalDuration() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>sakila.film.rental_rate</code>.
     */
    @Override
    public FilmRecord setRentalRate(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.rental_rate</code>.
     */
    @Override
    public BigDecimal getRentalRate() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>sakila.film.length</code>.
     */
    @Override
    public FilmRecord setLength(Short value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.length</code>.
     */
    @Override
    public Short getLength() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>sakila.film.replacement_cost</code>.
     */
    @Override
    public FilmRecord setReplacementCost(BigDecimal value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.replacement_cost</code>.
     */
    @Override
    public BigDecimal getReplacementCost() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>sakila.film.rating</code>.
     */
    @Override
    public FilmRecord setRating(FilmRating value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.rating</code>.
     */
    @Override
    public FilmRating getRating() {
        return (FilmRating) get(10);
    }

    /**
     * Setter for <code>sakila.film.special_features</code>.
     */
    @Override
    public FilmRecord setSpecialFeatures(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.special_features</code>.
     */
    @Override
    public String getSpecialFeatures() {
        return (String) get(11);
    }

    /**
     * Setter for <code>sakila.film.last_update</code>.
     */
    @Override
    public FilmRecord setLastUpdate(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>sakila.film.last_update</code>.
     */
    @Override
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Short, String, String, Short, Boolean, Boolean, Boolean, BigDecimal, Short, BigDecimal, FilmRating, String, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Short, String, String, Short, Boolean, Boolean, Boolean, BigDecimal, Short, BigDecimal, FilmRating, String, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return Film.FILM.FILM_ID;
    }

    @Override
    public Field<String> field2() {
        return Film.FILM.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Film.FILM.DESCRIPTION;
    }

    @Override
    public Field<Short> field4() {
        return Film.FILM.RELEASE_YEAR;
    }

    @Override
    public Field<Boolean> field5() {
        return Film.FILM.LANGUAGE_ID;
    }

    @Override
    public Field<Boolean> field6() {
        return Film.FILM.ORIGINAL_LANGUAGE_ID;
    }

    @Override
    public Field<Boolean> field7() {
        return Film.FILM.RENTAL_DURATION;
    }

    @Override
    public Field<BigDecimal> field8() {
        return Film.FILM.RENTAL_RATE;
    }

    @Override
    public Field<Short> field9() {
        return Film.FILM.LENGTH;
    }

    @Override
    public Field<BigDecimal> field10() {
        return Film.FILM.REPLACEMENT_COST;
    }

    @Override
    public Field<FilmRating> field11() {
        return Film.FILM.RATING;
    }

    @Override
    public Field<String> field12() {
        return Film.FILM.SPECIAL_FEATURES;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return Film.FILM.LAST_UPDATE;
    }

    @Override
    public Short component1() {
        return getFilmId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Short component4() {
        return getReleaseYear();
    }

    @Override
    public Boolean component5() {
        return getLanguageId();
    }

    @Override
    public Boolean component6() {
        return getOriginalLanguageId();
    }

    @Override
    public Boolean component7() {
        return getRentalDuration();
    }

    @Override
    public BigDecimal component8() {
        return getRentalRate();
    }

    @Override
    public Short component9() {
        return getLength();
    }

    @Override
    public BigDecimal component10() {
        return getReplacementCost();
    }

    @Override
    public FilmRating component11() {
        return getRating();
    }

    @Override
    public String component12() {
        return getSpecialFeatures();
    }

    @Override
    public LocalDateTime component13() {
        return getLastUpdate();
    }

    @Override
    public Short value1() {
        return getFilmId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Short value4() {
        return getReleaseYear();
    }

    @Override
    public Boolean value5() {
        return getLanguageId();
    }

    @Override
    public Boolean value6() {
        return getOriginalLanguageId();
    }

    @Override
    public Boolean value7() {
        return getRentalDuration();
    }

    @Override
    public BigDecimal value8() {
        return getRentalRate();
    }

    @Override
    public Short value9() {
        return getLength();
    }

    @Override
    public BigDecimal value10() {
        return getReplacementCost();
    }

    @Override
    public FilmRating value11() {
        return getRating();
    }

    @Override
    public String value12() {
        return getSpecialFeatures();
    }

    @Override
    public LocalDateTime value13() {
        return getLastUpdate();
    }

    @Override
    public FilmRecord value1(Short value) {
        setFilmId(value);
        return this;
    }

    @Override
    public FilmRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public FilmRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public FilmRecord value4(Short value) {
        setReleaseYear(value);
        return this;
    }

    @Override
    public FilmRecord value5(Boolean value) {
        setLanguageId(value);
        return this;
    }

    @Override
    public FilmRecord value6(Boolean value) {
        setOriginalLanguageId(value);
        return this;
    }

    @Override
    public FilmRecord value7(Boolean value) {
        setRentalDuration(value);
        return this;
    }

    @Override
    public FilmRecord value8(BigDecimal value) {
        setRentalRate(value);
        return this;
    }

    @Override
    public FilmRecord value9(Short value) {
        setLength(value);
        return this;
    }

    @Override
    public FilmRecord value10(BigDecimal value) {
        setReplacementCost(value);
        return this;
    }

    @Override
    public FilmRecord value11(FilmRating value) {
        setRating(value);
        return this;
    }

    @Override
    public FilmRecord value12(String value) {
        setSpecialFeatures(value);
        return this;
    }

    @Override
    public FilmRecord value13(LocalDateTime value) {
        setLastUpdate(value);
        return this;
    }

    @Override
    public FilmRecord values(Short value1, String value2, String value3, Short value4, Boolean value5, Boolean value6, Boolean value7, BigDecimal value8, Short value9, BigDecimal value10, FilmRating value11, String value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFilm from) {
        setFilmId(from.getFilmId());
        setTitle(from.getTitle());
        setDescription(from.getDescription());
        setReleaseYear(from.getReleaseYear());
        setLanguageId(from.getLanguageId());
        setOriginalLanguageId(from.getOriginalLanguageId());
        setRentalDuration(from.getRentalDuration());
        setRentalRate(from.getRentalRate());
        setLength(from.getLength());
        setReplacementCost(from.getReplacementCost());
        setRating(from.getRating());
        setSpecialFeatures(from.getSpecialFeatures());
        setLastUpdate(from.getLastUpdate());
    }

    @Override
    public <E extends IFilm> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilmRecord
     */
    public FilmRecord() {
        super(Film.FILM);
    }

    /**
     * Create a detached, initialised FilmRecord
     */
    public FilmRecord(Short filmId, String title, String description, Short releaseYear, Boolean languageId, Boolean originalLanguageId, Boolean rentalDuration, BigDecimal rentalRate, Short length, BigDecimal replacementCost, FilmRating rating, String specialFeatures, LocalDateTime lastUpdate) {
        super(Film.FILM);

        setFilmId(filmId);
        setTitle(title);
        setDescription(description);
        setReleaseYear(releaseYear);
        setLanguageId(languageId);
        setOriginalLanguageId(originalLanguageId);
        setRentalDuration(rentalDuration);
        setRentalRate(rentalRate);
        setLength(length);
        setReplacementCost(replacementCost);
        setRating(rating);
        setSpecialFeatures(specialFeatures);
        setLastUpdate(lastUpdate);
    }

    /**
     * Create a detached, initialised FilmRecord
     */
    public FilmRecord(io.github.jklingsporn.qjre.schema.tables.pojos.Film value) {
        super(Film.FILM);

        if (value != null) {
            setFilmId(value.getFilmId());
            setTitle(value.getTitle());
            setDescription(value.getDescription());
            setReleaseYear(value.getReleaseYear());
            setLanguageId(value.getLanguageId());
            setOriginalLanguageId(value.getOriginalLanguageId());
            setRentalDuration(value.getRentalDuration());
            setRentalRate(value.getRentalRate());
            setLength(value.getLength());
            setReplacementCost(value.getReplacementCost());
            setRating(value.getRating());
            setSpecialFeatures(value.getSpecialFeatures());
            setLastUpdate(value.getLastUpdate());
        }
    }

        public FilmRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
