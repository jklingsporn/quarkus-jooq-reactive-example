/*
 * This file is generated by jOOQ.
 */
package io.github.jklingsporn.qjre.schema.tables.pojos;


import io.github.jklingsporn.qjre.schema.enums.FilmRating;
import io.github.jklingsporn.qjre.schema.tables.interfaces.IFilm;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Film implements VertxPojo, IFilm {

    private static final long serialVersionUID = 1L;

    private Short         filmId;
    private String        title;
    private String        description;
    private Short         releaseYear;
    private Boolean       languageId;
    private Boolean       originalLanguageId;
    private Boolean       rentalDuration;
    private BigDecimal    rentalRate;
    private Short         length;
    private BigDecimal    replacementCost;
    private FilmRating    rating;
    private String        specialFeatures;
    private LocalDateTime lastUpdate;

    public Film() {}

    public Film(IFilm value) {
        this.filmId = value.getFilmId();
        this.title = value.getTitle();
        this.description = value.getDescription();
        this.releaseYear = value.getReleaseYear();
        this.languageId = value.getLanguageId();
        this.originalLanguageId = value.getOriginalLanguageId();
        this.rentalDuration = value.getRentalDuration();
        this.rentalRate = value.getRentalRate();
        this.length = value.getLength();
        this.replacementCost = value.getReplacementCost();
        this.rating = value.getRating();
        this.specialFeatures = value.getSpecialFeatures();
        this.lastUpdate = value.getLastUpdate();
    }

    public Film(
        Short         filmId,
        String        title,
        String        description,
        Short         releaseYear,
        Boolean       languageId,
        Boolean       originalLanguageId,
        Boolean       rentalDuration,
        BigDecimal    rentalRate,
        Short         length,
        BigDecimal    replacementCost,
        FilmRating    rating,
        String        specialFeatures,
        LocalDateTime lastUpdate
    ) {
        this.filmId = filmId;
        this.title = title;
        this.description = description;
        this.releaseYear = releaseYear;
        this.languageId = languageId;
        this.originalLanguageId = originalLanguageId;
        this.rentalDuration = rentalDuration;
        this.rentalRate = rentalRate;
        this.length = length;
        this.replacementCost = replacementCost;
        this.rating = rating;
        this.specialFeatures = specialFeatures;
        this.lastUpdate = lastUpdate;
    }

        public Film(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>sakila.film.film_id</code>.
     */
    @Override
    public Short getFilmId() {
        return this.filmId;
    }

    /**
     * Setter for <code>sakila.film.film_id</code>.
     */
    @Override
    public Film setFilmId(Short filmId) {
        this.filmId = filmId;
        return this;
    }

    /**
     * Getter for <code>sakila.film.title</code>.
     */
    @Override
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>sakila.film.title</code>.
     */
    @Override
    public Film setTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Getter for <code>sakila.film.description</code>.
     */
    @Override
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>sakila.film.description</code>.
     */
    @Override
    public Film setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>sakila.film.release_year</code>.
     */
    @Override
    public Short getReleaseYear() {
        return this.releaseYear;
    }

    /**
     * Setter for <code>sakila.film.release_year</code>.
     */
    @Override
    public Film setReleaseYear(Short releaseYear) {
        this.releaseYear = releaseYear;
        return this;
    }

    /**
     * Getter for <code>sakila.film.language_id</code>.
     */
    @Override
    public Boolean getLanguageId() {
        return this.languageId;
    }

    /**
     * Setter for <code>sakila.film.language_id</code>.
     */
    @Override
    public Film setLanguageId(Boolean languageId) {
        this.languageId = languageId;
        return this;
    }

    /**
     * Getter for <code>sakila.film.original_language_id</code>.
     */
    @Override
    public Boolean getOriginalLanguageId() {
        return this.originalLanguageId;
    }

    /**
     * Setter for <code>sakila.film.original_language_id</code>.
     */
    @Override
    public Film setOriginalLanguageId(Boolean originalLanguageId) {
        this.originalLanguageId = originalLanguageId;
        return this;
    }

    /**
     * Getter for <code>sakila.film.rental_duration</code>.
     */
    @Override
    public Boolean getRentalDuration() {
        return this.rentalDuration;
    }

    /**
     * Setter for <code>sakila.film.rental_duration</code>.
     */
    @Override
    public Film setRentalDuration(Boolean rentalDuration) {
        this.rentalDuration = rentalDuration;
        return this;
    }

    /**
     * Getter for <code>sakila.film.rental_rate</code>.
     */
    @Override
    public BigDecimal getRentalRate() {
        return this.rentalRate;
    }

    /**
     * Setter for <code>sakila.film.rental_rate</code>.
     */
    @Override
    public Film setRentalRate(BigDecimal rentalRate) {
        this.rentalRate = rentalRate;
        return this;
    }

    /**
     * Getter for <code>sakila.film.length</code>.
     */
    @Override
    public Short getLength() {
        return this.length;
    }

    /**
     * Setter for <code>sakila.film.length</code>.
     */
    @Override
    public Film setLength(Short length) {
        this.length = length;
        return this;
    }

    /**
     * Getter for <code>sakila.film.replacement_cost</code>.
     */
    @Override
    public BigDecimal getReplacementCost() {
        return this.replacementCost;
    }

    /**
     * Setter for <code>sakila.film.replacement_cost</code>.
     */
    @Override
    public Film setReplacementCost(BigDecimal replacementCost) {
        this.replacementCost = replacementCost;
        return this;
    }

    /**
     * Getter for <code>sakila.film.rating</code>.
     */
    @Override
    public FilmRating getRating() {
        return this.rating;
    }

    /**
     * Setter for <code>sakila.film.rating</code>.
     */
    @Override
    public Film setRating(FilmRating rating) {
        this.rating = rating;
        return this;
    }

    /**
     * Getter for <code>sakila.film.special_features</code>.
     */
    @Override
    public String getSpecialFeatures() {
        return this.specialFeatures;
    }

    /**
     * Setter for <code>sakila.film.special_features</code>.
     */
    @Override
    public Film setSpecialFeatures(String specialFeatures) {
        this.specialFeatures = specialFeatures;
        return this;
    }

    /**
     * Getter for <code>sakila.film.last_update</code>.
     */
    @Override
    public LocalDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>sakila.film.last_update</code>.
     */
    @Override
    public Film setLastUpdate(LocalDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Film (");

        sb.append(filmId);
        sb.append(", ").append(title);
        sb.append(", ").append(description);
        sb.append(", ").append(releaseYear);
        sb.append(", ").append(languageId);
        sb.append(", ").append(originalLanguageId);
        sb.append(", ").append(rentalDuration);
        sb.append(", ").append(rentalRate);
        sb.append(", ").append(length);
        sb.append(", ").append(replacementCost);
        sb.append(", ").append(rating);
        sb.append(", ").append(specialFeatures);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFilm from) {
        setFilmId(from.getFilmId());
        setTitle(from.getTitle());
        setDescription(from.getDescription());
        setReleaseYear(from.getReleaseYear());
        setLanguageId(from.getLanguageId());
        setOriginalLanguageId(from.getOriginalLanguageId());
        setRentalDuration(from.getRentalDuration());
        setRentalRate(from.getRentalRate());
        setLength(from.getLength());
        setReplacementCost(from.getReplacementCost());
        setRating(from.getRating());
        setSpecialFeatures(from.getSpecialFeatures());
        setLastUpdate(from.getLastUpdate());
    }

    @Override
    public <E extends IFilm> E into(E into) {
        into.from(this);
        return into;
    }
}
